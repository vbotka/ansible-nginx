---

# files
- name: "conf: Configure directories and files"
  ansible.builtin.include_tasks: fn/conf-files.yml

# nginx/sites-enabled (deprecated)
- name: "conf: Link conf.d to sites-enabled"
  ansible.builtin.include_tasks: fn/conf-sites-enabled.yml
  when: nginx_link_sites_enabled|bool

# nginx/nginx.conf
- name: "conf: Configure {{ nginx_conf_path }}"
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_path }}"
    owner: "{{ nginx_conf_owner }}"
    group: "{{ nginx_conf_group }}"
    mode: "{{ nginx_conf_mode }}"
    backup: "{{ nginx_backup_conf }}"
    validate: nginx -t -c %s
  notify: reload nginx
  tags: nginx-conf-nginxconf

# nginx/conf.d
- name: "conf: Include variables from {{ nginx_server_conf_dir }}"
  block:
    - name: "conf: Set variables for al_include_confd_vars_list"
      ansible.builtin.set_fact:
        al_include_confd_dir: "{{ nginx_server_conf_dir }}"
        al_include_confd_vars_list_type: "fname"
    - name: "conf: Include al_include_confd_vars_list"
      ansible.builtin.include_role:
        name: vbotka.ansible_lib
        tasks_from: al_include_confd_vars_list
    - name: "conf: Debug al_include_confd_vars_list"
      ansible.builtin.debug:
        var: item
      loop: "{{ al_include_confd_vars_list }}"
      loop_control:
        label: "{{ item.fname }}"
      when: nginx_debug|bool

- name: "conf: Configure servers in {{ nginx_conf_dir }}/nginx/conf.d"
  ansible.builtin.template:
    src: server2.conf.j2
    dest: "{{ nginx_conf_dir }}/nginx/conf.d/{{ item.fname }}.conf"
    owner: "{{ nginx_conf_owner }}"
    group: "{{ nginx_conf_group }}"
    mode: "{{ nginx_conf_mode }}"
    backup: "{{ nginx_backup_conf }}"
  loop: "{{ al_include_confd_vars_list }}"
  loop_control:
    label: "{{ item.fname }}"
  notify: reload nginx

# EOF
...
